/**
 * Created by root on 6/22/16.
 */
var express = require('express');
var router = express.Router();
var azure = require('./helper/azure');
var validator = require('./helper/validator');
var db = require('./helper/db');


/**
 * @api {POST} http://40.69.32.246:3000/users/registerDeviceToken Register user device token for push
 * @apiVersion 0.1.0
 * @apiName Device Token
 * @apiGroup User
 *
 * @apiParam {String} device_token Device token generated by azure sdk
 * @apiParam {String} user_id   User ID
 * @apiSuccess {Boolean} error=false Value will be true/false
 * @apiSuccess {String} message response message
 * @apiSuccessExample Success Response:
 *    {
 *        error: false,
 *        message: "Success"
 *    }
 *
 * @apiError {Boolean} error=true
 * @apiError {String} message
 */

router.post('/registerDeviceToken', function (req, res){
    if(validator.isMissing(req.body.device_token)){
        return res.status(404).send({error: false, message: "Missing device_token"});
    }
    if(validator.isMissing(req.body.user_id)){
        return res.status(404).send({error: false, message: "Missing user_id"});
    }
    var token = req.body.device_token;

    findDeviceTag(function (err, tags){
        if(tags){
            if(!tags.length){
                insertDeviceTag(function (err, resp){
                    if(err)return res.status(400).send(err);

                    res.status(200).send(resp);
                })
            }else {
                res.status(200).send({error: false, message: "Success"});
            }
        }else{
            insertDeviceTag(function (err, resp){
                if(err)return res.status(400).send(err);

                res.status(200).send(resp);
            })
        }
    });

    function insertDeviceTag(cb){
        azure.apns.createNativeRegistration(token, token, function (err, response){
            if(err) return cb({error: true, err: err}, null);
            if(response){
                var query = "INSERT INTO `push_tag` SET";
                query += " " + "`user_id`=" + db.escape(req.body.user_id);
                query += " " + ", `tag`=" + db.escape(response.Tags);
                db.query(query, function (err, result){
                    if(err)return cb({error: true, err: err}, null);
                    if(result.insertId > 0){
                        cb(null, {error : false, message: "Success"});
                    }else{
                        cb({error : true, message: "Failed"}, null);
                    }
                });
            }
        });
    }
    function findDeviceTag(cb){
        var query = "SELECT `tag` FROM `push_tag`";
        query += " " + "WHERE `user_id`=" + db.escape(req.body.user_id);
        query += " " + ", `tag`=" + db.escape(token);
        db.query(query, function (err, tags){
            if(err) return cb(err, null);
            if(tags){
                cb(null, tags);
            }
        });
    }
});

module.exports = router;